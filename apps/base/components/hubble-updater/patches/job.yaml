apiVersion: batch/v1
kind: Job
metadata:
  name: any
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  backoffLimit: 2
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/role: "hubble"
        vault.hashicorp.com/agent-inject-secret-config: "static/data/app/hubble"
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "static/data/app/hubble" -}}
            export HUBBLE_TOKEN={{ .Data.data.token }}
          {{- end }}
        vault.hashicorp.com/agent-pre-populate-only: "true"
    spec:
      restartPolicy: Never
      volumes:
      - name: shared
        emptyDir: {}
      containers:
      - name: notify
        volumeMounts:
          - name: shared
            mountPath: /tmp/shared
        image: 370025973162.dkr.ecr.us-east-2.amazonaws.com/curlimages/curl
        command: [ "/bin/sh" ]
        args:
          - -c
          - |
            source /vault/secrets/config
            mkdir -p /tmp/shared/ && touch /tmp/shared/envs
            source /tmp/shared/envs
            curl_resp=/tmp/hubble
            code=$(curl -s -o $curl_resp -X POST -w "%{http_code}" \
              -H 'Content-Type: application/x-www-form-urlencoded' \
              -H "Authorization: $HUBBLE_TOKEN" \
              -d "deploy_target=K8S" \
              -d "executor_name=Argo" \
              -d "project_id=$HUBBLE_PROJECT_ID" \
              -d "package_id=$(date +%s)" \
              -d "deploy_type=$ENVIRONMENT" \
              -d "git_branch=$HUBBLE_GIT_BRANCH" \
              -d "deploy_env_id=$HUBBLE_MACHINES" \
              https://hubble.tubitv.com/api/release)
            if [ "$code" == "201" ] || [ "$code" == "202" ];then
              echo "Update Hubble successfully."
            else
              echo "Update Hubble failed with status code $code and responses:"
              cat $curl_resp
              exit 1
            fi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: HUBBLE_PROJECT_ID
            valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['hubble-project-id']
          - name: HUBBLE_GIT_BRANCH
            valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['hubble-git-branch']
          - name: HUBBLE_MACHINES
            valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['hubble-machines']
          - name: ENVIRONMENT
            valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['environment']
