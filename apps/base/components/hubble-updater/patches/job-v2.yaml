apiVersion: batch/v1
kind: Job
metadata:
  name: any
  annotations:
    argocd.argoproj.io/hook: PostSync
spec:
  backoffLimit: 2
  completions: 1
  parallelism: 1
  template:
    metadata:
      annotations:
        vault.hashicorp.com/role: "hubble"
        vault.hashicorp.com/agent-inject-secret-config: "static/data/app/hubble"
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "static/data/app/hubble" -}}
            export HUBBLE_TOKEN={{ .Data.data.deploy_api_token }}
          {{- end }}
        vault.hashicorp.com/agent-pre-populate-only: "true"
    spec:
      restartPolicy: Never
      volumes:
        - name: shared
          emptyDir: {}
      containers:
        - name: notify
          volumeMounts:
            - name: shared
              mountPath: /tmp/shared
          image: 370025973162.dkr.ecr.us-east-2.amazonaws.com/curlimages/curl
          command: [ "/bin/sh" ]
          args:
            - -c
            - |
              source /vault/secrets/config
              source /tmp/shared/envs
              curl_resp=/tmp/hubble
              # most projects use ENVIRONMENT as env_id, it's the default value on Hubble
              HUBBLE_ENV_ID=${HUBBLE_ENV_ID:=$ENVIRONMENT}
              code=$(curl -s -o $curl_resp -X POST -w "%{http_code}" \
                -H 'Content-Type: application/json' \
                -H "Authorization: $HUBBLE_TOKEN" \
                -d '{
                      "deployment_project_id": "'"$HUBBLE_PROJECT_ID"'",
                      "deployment_env_id": "'"$HUBBLE_ENV_ID"'",
                      "deployment_env_target_id": "'"$HUBBLE_ENV_TARGET_ID"'",
                      "deployment_image_tag": "'"$IMAGE_TAG"'",
                      "deployment_image_tags": "'"$IMAGE_TAGS"'",
                      "status": "SUCCESS"
                    }' \
                https://hubble.tubitv.com/api/deployment/result)
              if [ "$code" == "200" ];then
                echo "Update Hubble successfully."
              else
                echo "Update Hubble failed with status code $code and responses:"
                cat $curl_resp
                exit 1
              fi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: HUBBLE_PROJECT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['hubble-project-id']
            - name: ENVIRONMENT
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['environment']
            - name: HUBBLE_ENV_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['hubble-env-id']
            - name: HUBBLE_ENV_TARGET_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['hubble-env-target-id']
            - name: IMAGE_TAG
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['image-tag']
